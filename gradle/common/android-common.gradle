class Config {
    Integer minVersion = null
    Integer targetVersion = null
    Integer compileSdkVersion = null
}

def isMultiplatform = ["androidMain", "jvmMain", "jvmCommonMain", "commonMain"].any { project.file("src/$it").exists() }
if (!isMultiplatform) {
    apply plugin: 'kotlin-android'
}

ext.androidCommon = { args = [:] ->
    apply from: "$rootDir/gradle/common/kotlin-common.gradle"

    Config config = new Config(args)

    int minVersion = config.minVersion ?: 21
    int targetVersion = config.targetVersion ?: 35
    int compileVersion = config.compileSdkVersion ?: targetVersion
    def javaVersion = JavaVersion.VERSION_17

    kotlinCommon()

    android {
        compileSdkVersion compileVersion

        compileOptions {
            coreLibraryDesugaringEnabled true
            sourceCompatibility javaVersion
            targetCompatibility javaVersion
        }

        namespace = "$group.${name.replace('-', '.')}"
        if (namespace.endsWith(".test")) {
            namespace += "ing"
        }

        defaultConfig {
            minSdkVersion minVersion
            targetSdkVersion targetVersion
            versionCode 1
            versionName version

            // Required for coreLibraryDesugaring
            multiDexEnabled true

            testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        }

        testOptions {
            // Needed for Robolectric
            unitTests {
                includeAndroidResources = true
            }
        }

        packagingOptions {
            pickFirst 'META-INF/*.kotlin_module'
        }
    }

    dependencies {
        coreLibraryDesugaring "com.android.tools:desugar_jdk_libs:1.2.2"
    }

    if (isMultiplatform) {
        allTests.dependsOn("testDebugUnitTest")
    }
}
