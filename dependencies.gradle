dependencies {
    ext {
        def isTestProject = project.name.endsWith("-test")
        commonTestDependency = { args ->
            if (isTestProject) {
                commonMainApi args
            } else {
                commonTestImplementation args
            }
        }
        jvmCommonTestDependency = { args ->
            if (isTestProject) {
                jvmCommonMainApi args
            } else {
                jvmCommonTestImplementation args
            }
        }
        androidTestDependency = { args ->
            if (isTestProject) {
                androidMainApi args
            } else {
                androidTestImplementation args
            }
        }

        if (!isMultiplatform) {
            commonMainApi = { args -> api args }
            commonTestImplementation = { args -> testImplementation args }
        }

        versionConstraints = {
            commonMainApi platform(libs.coroutines.bom)
        }

        base = {
            versionConstraints()

            commonMainApi libs.coroutines.core

            commonTestDependency libs.kotlin.test.main

            jvmCommonTestDependency libs.kotlin.test.junit
            jvmCommonTestDependency libs.junit
            commonTestDependency libs.coroutines.test

            jvmCommonTestImplementation libs.mockk
        }

        androidBase = {
            androidMainApi libs.androidx.annotation
            androidMainApi libs.androidx.appcompat
            androidMainApi libs.androidx.core
            androidMainApi libs.androidx.activity
            androidMainApi libs.androidx.fragment

            androidMainApi libs.androidx.lifecycle.runtime
            androidMainApi libs.androidx.lifecycle.livedata
            androidMainApi libs.androidx.lifecycle.service
//            androidMainApi libs.androidx.lifecycle.viewmodel
            constraints {
                api libs.androidx.lifecycle.common
                api libs.androidx.lifecycle.service
                api libs.androidx.lifecycle.process
            }

            androidTestDependency libs.androidx.arch.testing
            androidTestDependency libs.androidx.fragment.testing
            androidTestDependency libs.androidx.test.core
            androidTestDependency libs.androidx.test.junit
            androidTestDependency libs.robolectric
        }

        jetpackCompose = {
            composeCompiler {
                enableStrongSkippingMode = true
            }

            implementation platform(libs.compose.bom)

            commonMainApi compose.runtime
            composeMainApi compose.foundation
            composeMainApi compose.runtime
            composeMainApi compose.ui
            composeMainApi libs.androidx.lifecycle.viewmodel.compose
        }
    }
}
